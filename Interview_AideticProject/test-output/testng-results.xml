<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-28T18:48:26 IST" name="Suite" finished-at="2023-06-28T18:49:59 IST" duration-ms="93592">
    <groups>
    </groups>
    <test started-at="2023-06-28T18:48:26 IST" name="Test" finished-at="2023-06-28T18:49:59 IST" duration-ms="93592">
      <class name="testAidetic.AideticTestClass">
        <test-method is-config="true" signature="launchBrowser()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:26 IST" name="launchBrowser" finished-at="2023-06-28T18:48:30 IST" duration-ms="4903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method is-config="true" signature="createPomObject()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:30 IST" name="createPomObject" finished-at="2023-06-28T18:48:30 IST" duration-ms="24" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPomObject -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:31 IST" name="beforeClass" finished-at="2023-06-28T18:48:35 IST" duration-ms="4443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifywithGoogle()[pri:1, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:35 IST" name="verifywithGoogle" finished-at="2023-06-28T18:48:41 IST" duration-ms="5856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifywithGoogle -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:41 IST" name="captureScreenshot" finished-at="2023-06-28T18:48:42 IST" duration-ms="1391" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:42 IST" name="beforeClass" finished-at="2023-06-28T18:48:43 IST" duration-ms="1063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifywithGoogle()[pri:1, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:43 IST" name="verifywithGoogle" finished-at="2023-06-28T18:48:48 IST" duration-ms="5140" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[text() = 'Accept All']"}
  (Session info: chrome=114.0.5735.135)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [710491e7bdce484589f9aedae2df6962, findElement {using=xpath, value=//button[text() = 'Accept All']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.135, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Suchit\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59753}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59753/devtoo..., se:cdpVersion: 114.0.5735.135, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 710491e7bdce484589f9aedae2df6962]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[text() = 'Accept All']"}
  (Session info: chrome=114.0.5735.135)
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.9.1', revision: 'eb2032df7f'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [710491e7bdce484589f9aedae2df6962, findElement {using=xpath, value=//button[text() = 'Accept All']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 114.0.5735.135, chrome: {chromedriverVersion: 114.0.5735.90 (386bc09e8f4f..., userDataDir: C:\Users\Suchit\AppData\Loc...}, goog:chromeOptions: {debuggerAddress: localhost:59753}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59753/devtoo..., se:cdpVersion: 114.0.5735.135, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 710491e7bdce484589f9aedae2df6962
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:193)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at jdk.proxy2/jdk.proxy2.$Proxy19.click(Unknown Source)
at pomAidetic.LoginElement.clickOnacceptAll(LoginElement.java:56)
at testAidetic.AideticTestClass.verifywithGoogle(AideticTestClass.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifywithGoogle -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:48 IST" name="captureScreenshot" finished-at="2023-06-28T18:48:50 IST" duration-ms="1700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:50 IST" name="beforeClass" finished-at="2023-06-28T18:48:51 IST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithFacebook()[pri:2, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:51 IST" name="verifyWithFacebook" finished-at="2023-06-28T18:48:56 IST" duration-ms="5725" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithFacebook -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:56 IST" name="captureScreenshot" finished-at="2023-06-28T18:48:58 IST" duration-ms="1742" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:58 IST" name="beforeClass" finished-at="2023-06-28T18:48:59 IST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithFacebook()[pri:2, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:48:59 IST" name="verifyWithFacebook" finished-at="2023-06-28T18:49:05 IST" duration-ms="5595" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithFacebook -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:05 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:06 IST" duration-ms="1574" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:06 IST" name="beforeClass" finished-at="2023-06-28T18:49:07 IST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithApple()[pri:3, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:07 IST" name="verifyWithApple" finished-at="2023-06-28T18:49:13 IST" duration-ms="5776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithApple -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:13 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:15 IST" duration-ms="2497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:15 IST" name="beforeClass" finished-at="2023-06-28T18:49:16 IST" duration-ms="1002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithApple()[pri:3, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:16 IST" name="verifyWithApple" finished-at="2023-06-28T18:49:21 IST" duration-ms="5375" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithApple -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:21 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:24 IST" duration-ms="2629" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:24 IST" name="beforeClass" finished-at="2023-06-28T18:49:26 IST" duration-ms="1447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithMicrosoft()[pri:4, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:26 IST" name="verifyWithMicrosoft" finished-at="2023-06-28T18:49:31 IST" duration-ms="5144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithMicrosoft -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:31 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:33 IST" duration-ms="2244" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:33 IST" name="beforeClass" finished-at="2023-06-28T18:49:34 IST" duration-ms="775" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithMicrosoft()[pri:4, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:34 IST" name="verifyWithMicrosoft" finished-at="2023-06-28T18:49:40 IST" duration-ms="6110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithMicrosoft -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:40 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:42 IST" duration-ms="2682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:42 IST" name="beforeClass" finished-at="2023-06-28T18:49:43 IST" duration-ms="1014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithSignUp()[pri:5, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:43 IST" name="verifyWithSignUp" finished-at="2023-06-28T18:49:49 IST" duration-ms="5357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSignUp -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:49 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:51 IST" duration-ms="1854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:51 IST" name="beforeClass" finished-at="2023-06-28T18:49:51 IST" duration-ms="666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="verifyWithSignUp()[pri:5, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:51 IST" name="verifyWithSignUp" finished-at="2023-06-28T18:49:57 IST" duration-ms="5807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSignUp -->
        <test-method is-config="true" signature="captureScreenshot()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:57 IST" name="captureScreenshot" finished-at="2023-06-28T18:49:59 IST" duration-ms="1531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureScreenshot -->
        <test-method is-config="true" signature="memoryClean()[pri:0, instance:testAidetic.AideticTestClass@2a798d51]" started-at="2023-06-28T18:49:59 IST" name="memoryClean" finished-at="2023-06-28T18:49:59 IST" duration-ms="442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memoryClean -->
      </class> <!-- testAidetic.AideticTestClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
